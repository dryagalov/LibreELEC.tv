diff -Naur linux-7f42343.orig/arch/arm64/boot/dts/amlogic/mesongxl.dtsi linux-7f42343/arch/arm64/boot/dts/amlogic/mesongxl.dtsi
--- linux-7f42343.orig/arch/arm64/boot/dts/amlogic/mesongxl.dtsi	2016-10-03 21:04:51.136103391 +0800
+++ linux-7f42343/arch/arm64/boot/dts/amlogic/mesongxl.dtsi	2016-10-03 21:05:54.992104616 +0800
@@ -60,6 +60,7 @@
 		compatible = "aml, restart";
 		sys_reset = <0x84000009>;
 		sys_poweroff = <0x84000008>;
+		poweroff_gpio = <&gpio GPIOZ_14  GPIO_ACTIVE_LOW>;
 	};
 
 
diff -Naur linux-7f42343.orig/drivers/amlogic/reset/gxbb_poweroff.c linux-7f42343/drivers/amlogic/reset/gxbb_poweroff.c
--- linux-7f42343.orig/drivers/amlogic/reset/gxbb_poweroff.c	2016-10-03 21:04:53.520103437 +0800
+++ linux-7f42343/drivers/amlogic/reset/gxbb_poweroff.c	2016-10-03 21:07:24.544106334 +0800
@@ -32,6 +32,8 @@
 #include <linux/amlogic/cpu_version.h>
 #include <asm/compiler.h>
 #include <linux/kdebug.h>
+#include <linux/of_gpio.h>
+#include <linux/gpio.h>
 /*
  * Commands accepted by the arm_machine_restart() system call.
  *
@@ -61,6 +63,7 @@
 #define WATCHDOG_TC		0x2640
 static u32 psci_function_id_restart;
 static u32 psci_function_id_poweroff;
+static int poweroff_gpio;
 static char *kernel_panic;
 static u32 parse_reason(const char *cmd)
 {
@@ -128,6 +131,7 @@
 
 static void do_aml_poweroff(void)
 {
+	gpio_direction_output(poweroff_gpio, 1);
 	/* TODO: Add poweroff capability */
 	__invoke_psci_fn_smc(0x82000042, 1, 0, 0);
 	__invoke_psci_fn_smc(psci_function_id_poweroff,
@@ -149,6 +153,8 @@
 {
 	u32 id;
 	int ret;
+	struct gpio_desc *desc;
+	enum of_gpio_flags flags;
 	pm_power_off = do_aml_poweroff;
 	arm_pm_restart = do_aml_restart;
 
@@ -157,6 +163,12 @@
 
 	if (!of_property_read_u32(pdev->dev.of_node, "sys_poweroff", &id))
 		psci_function_id_poweroff = id;
+
+	desc = of_get_named_gpiod_flags(pdev->dev.of_node,
+			"poweroff_gpio", 0, &flags);
+	poweroff_gpio = desc_to_gpio(desc);
+	gpio_request(poweroff_gpio, "poweroff_gpio");
+	gpio_direction_output(poweroff_gpio, 0);
 	ret = register_die_notifier(&panic_notifier);
 	if (ret != 0)
 			return ret;
