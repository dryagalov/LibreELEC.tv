diff -Naur u-boot-2a56c9f.orig/board/khadas/configs/kvim.h u-boot-2a56c9f/board/khadas/configs/kvim.h
--- u-boot-2a56c9f.orig/board/khadas/configs/kvim.h	2016-07-20 19:51:28.763595612 +0800
+++ u-boot-2a56c9f/board/khadas/configs/kvim.h	2016-07-20 19:52:02.141376027 +0800
@@ -70,153 +70,11 @@
 /* args/envs */
 #define CONFIG_SYS_MAXARGS  64
 #define CONFIG_EXTRA_ENV_SETTINGS \
-        "boardname=kvim\0"\
-        "dtbaddr=0x1000000\0"\
-        "bootcmd=cfgload\0"\
-        "firstboot=1\0"\
-        "upgrade_step=0\0"\
-        "jtag=apee\0"\
-        "loadaddr=1080000\0"\
-        "outputmode=1080p60hz\0" \
-        "hdmimode=1080p60hz\0" \
-        "display_width=1920\0" \
-        "display_height=1080\0" \
-        "display_bpp=16\0" \
-        "display_color_index=16\0" \
-        "display_layer=osd1\0" \
-        "display_color_fg=0xffff\0" \
-        "display_color_bg=0\0" \
-        "dtb_mem_addr=0x1000000\0" \
-        "fb_addr=0x3d800000\0" \
-        "fb_width=1920\0" \
-        "fb_height=1080\0" \
-        "usb_burning=update 1000\0" \
-        "fdt_high=0x20000000\0"\
-        "try_auto_burn=update 700 750;\0"\
-        "sdcburncfg=aml_sdc_burn.ini\0"\
-        "sdc_burning=sdc_burn ${sdcburncfg}\0"\
-        "wipe_data=successful\0"\
-        "wipe_cache=successful\0"\
-        "recovery_part=recovery\0"\
-        "recovery_offset=0\0"\
-        "initargs="\
-            "init=/sbin/init console=ttyS0,115200 no_console_suspend earlyprintk=aml-uart,0xc81004c0 ramoops.pstore_en=1 ramoops.record_size=0x8000 ramoops.console_size=0x4000 androidboot.selinux=enforcing"\
-            "\0"\
-        "upgrade_check="\
-            "echo upgrade_step=${upgrade_step}; "\
-            "if itest ${upgrade_step} == 3; then "\
-                "run init_display; run storeargs; run update;"\
-            "else fi;"\
-            "\0"\
-    "storeargs="\
-            "setenv bootargs root=/dev/system rootfstype=ext4 ${initargs} logo=${display_layer},loaded,${fb_addr},${outputmode} vout=${outputmode},enable hdmimode=${hdmimode} hdmitx=${hdmimode} androidboot.firstboot=${firstboot} jtag=${jtag}; "\
-	"setenv bootargs ${bootargs} androidboot.hardware=amlogic;"\
-            "run cmdline_keys;"\
-            "\0"\
-        "sdcardargs="\
-            "setenv bootargs root=/dev/mmcblk0p1 rootfstype=ext2 ${initargs} logo=${display_layer},loaded,${fb_addr},${outputmode} vout=${outputmode},enable hdmimode=${hdmimode} hdmitx=${hdmimode} androidboot.firstboot=${firstboot} jtag=${jtag}; "\
-	"setenv bootargs ${bootargs} androidboot.hardware=amlogic;"\
-            "run cmdline_keys;"\
-            "\0"\
-        "bootupdateargs="\
-            "setenv bootargs root=/dev/mmcblk0p1 rootfstype=vfat ${initargs} logo=${display_layer},loaded,${fb_addr},${outputmode} vout=${outputmode},enable hdmimode=${hdmimode} hdmitx=${hdmimode} androidboot.firstboot=${firstboot} jtag=${jtag} firmware=rootfs.tar.gz;"\
-	"setenv bootargs ${bootargs} androidboot.hardware=amlogic;"\
-            "run cmdline_keys;"\
-            "\0"\
-        "switch_bootmode="\
-            "get_rebootmode;"\
-            "if test ${reboot_mode} = factory_reset; then "\
-                    "run recovery_from_flash;"\
-            "else if test ${reboot_mode} = update; then "\
-                    "run update;"\
-            "else if test ${reboot_mode} = cold_boot; then "\
-                /*"run try_auto_burn; "*/\
-            "fi;fi;fi;"\
-            "\0" \
-        "storeboot="\
-            "if imgread kernel boot ${loadaddr}; then bootm ${loadaddr}; fi;"\
-            "run update;"\
-            "\0"\
-        "bootsdcard="\
-            "run sdcardargs; mmcinfo; ext2load mmc 0 ${loadaddr} boot.img; bootm ${loadaddr};"\
-            "\0"\
-        "bootupdate="\
-            "run bootupdateargs; mmcinfo; fatload mmc 0 ${loadaddr} boot.img; bootm ${loadaddr};"\
-            "\0"\
-        "factory_reset_poweroff_protect="\
-            "echo wipe_data=${wipe_data}; echo wipe_cache=${wipe_cache};"\
-            "if test ${wipe_data} = failed; then "\
-                "run init_display; run storeargs;"\
-                "if mmcinfo; then "\
-                    "run recovery_from_sdcard;"\
-                "fi;"\
-                "if usb start 0; then "\
-                    "run recovery_from_udisk;"\
-                "fi;"\
-                "run recovery_from_flash;"\
-            "fi; "\
-            "if test ${wipe_cache} = failed; then "\
-                "run init_display; run storeargs;"\
-                "if mmcinfo; then "\
-                    "run recovery_from_sdcard;"\
-                "fi;"\
-                "if usb start 0; then "\
-                    "run recovery_from_udisk;"\
-                "fi;"\
-                "run recovery_from_flash;"\
-            "fi; \0" \
-         "update="\
-            /*first usb burning, second sdc_burn, third ext-sd autoscr/recovery, last udisk autoscr/recovery*/\
-            "run usb_burning; "\
-            "run sdc_burning; "\
-            "if mmcinfo; then "\
-                "run recovery_from_sdcard;"\
-            "fi;"\
-            "if usb start 0; then "\
-                "run recovery_from_udisk;"\
-            "fi;"\
-            "run recovery_from_flash;"\
-            "\0"\
-        "recovery_from_sdcard="\
-            "if fatload mmc 0 ${loadaddr} aml_autoscript; then autoscr ${loadaddr}; fi;"\
-            "if fatload mmc 0 ${loadaddr} recovery.img; then "\
-                    "if fatload mmc 0 ${dtb_mem_addr} dtb.img; then echo sd dtb.img loaded; fi;"\
-                    "wipeisb; "\
-                    "bootm ${loadaddr};fi;"\
-            "\0"\
-        "recovery_from_udisk="\
-            "if fatload usb 0 ${loadaddr} aml_autoscript; then autoscr ${loadaddr}; fi;"\
-            "if fatload usb 0 ${loadaddr} recovery.img; then "\
-                "if fatload usb 0 ${dtb_mem_addr} dtb.img; then echo udisk dtb.img loaded; fi;"\
-                "wipeisb; "\
-                "bootm ${loadaddr};fi;"\
-            "\0"\
-        "recovery_from_flash="\
-            "setenv bootargs ${bootargs} aml_dt=${aml_dt} recovery_part={recovery_part} recovery_offset={recovery_offset};"\
-            "if imgread kernel ${recovery_part} ${loadaddr} ${recovery_offset}; then wipeisb; bootm ${loadaddr}; fi"\
-            "\0"\
-        "init_display="\
-            "osd open;osd clear;imgread pic logo bootup $loadaddr;bmp display $bootup_offset;bmp scale"\
-            "\0"\
-        "cmdline_keys="\
-            "if keyman init 0x1234; then "\
-                "if keyman read usid ${loadaddr} str; then "\
-                    "setenv bootargs ${bootargs} androidboot.serialno=${usid};"\
-                "fi;"\
-                "if keyman read mac ${loadaddr} str; then "\
-                    "setenv bootargs ${bootargs} mac=${mac} androidboot.mac=${mac};"\
-                "fi;"\
-                "if keyman read deviceid ${loadaddr} str; then "\
-                    "setenv bootargs ${bootargs} androidboot.deviceid=${deviceid};"\
-                "fi;"\
-            "fi;"\
-            "\0"\
-        "upgrade_key="\
-            "if gpio input GPIOAO_2; then "\
-                "echo detect upgrade key; sleep 1;"\
-                "if gpio input GPIOAO_2; then run update; fi;"\
-            "fi;"\
-            "\0"\
+	"boardname=kvim\0"\
+	"loadaddr=0x20000000\0"\
+	"dtbaddr=0x1000000\0"\
+	"fdt_high=0x20000000\0"\
+	"bootcmd=cfgload\0"
 
 #define CONFIG_PREBOOT  \
             "run factory_reset_poweroff_protect;"\
